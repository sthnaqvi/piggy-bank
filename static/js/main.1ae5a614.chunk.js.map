{"version":3,"sources":["home/CurrentAccount.js","user/userStore.js","home/accounts.js","home/mainAccount.js","home/homePage.js","savings/saveToBankPage.js","user/loginPage.js","piggy-app.js","serviceWorker.js","index.js"],"names":["CurrentAccount","goToTransferPage","_this","props","history","push","react_default","a","createElement","Row","className","Panel","Col","xs","md","sm","this","remainingBalance","Button","onClick","React","Component","withRouter","Store","JSON","parse","localStorage","getItem","user","isAuthenticated","prototype","saveUser","setItem","stringify","console","log","getUser","userStore","ListItems","createList","list","funds","i","length","fundComplete","key","Date","lg","name","amount","ListGroupItem","ListGroup","Accounts","context","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addNewPiggyBank","bind","assertThisInitialized","handleClose","handleChange","saveNewPiggyBank","state","showModal","newBankvalue","self","options","method","url","headers","authorization","token","content-type","data","json","axios","then","response","refresh","catch","error","alert","e","setState","target","value","_this3","Heading","Title","componentClass","Body","accounts_ListItems","Modal","show","onHide","Header","FormGroup","controlId","ControlLabel","FormControl","onChange","type","placeholder","Feedback","Footer","bsStyle","UpdateMainAccountModal","updateMainBal","onUpdate","nextProps","MainAccount","openUpdateModal","mainBalanceAmount","balance","mainBalance","mainAccount_UpdateMainAccountModal","HomePage","getDataFromServer","account","piggybanks","forEach","bank","newState","assign","Grid","home_CurrentAccount","home_accounts","mainAccount","DropDownWithItems","onFundSelected","index","dropDownTitle","createDropDown","MenuItem","onSelect","eventKey","DropdownButton","title","id","SaveToBank","currentFund","forceUpdateAmounts","fundIndex","fundSelected","isNaN","Number","transferAmountValue","forceObject","handleTransferAmountChange","newAmount","newRemainingBalance","remainingAccountBalance","goToHomePage","executeTransfer","_id","currentBalance","style","textAlign","saveToBankPage_DropDownWithItems","hidden","undefined","Login","attemptLogin","email","password","msg","handleEmailChange","handlePasswordChange","PiggyApp","BrowserRouter","piggy_app_PrivateRoute","exact","path","component","saveToBankPage","Route","LoginPage","PrivateRoute","_ref","rest","objectWithoutProperties","render","Redirect","to","pathname","from","location","Boolean","window","hostname","match","ReactDOM","piggy_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iZAKMA,6MAEFC,iBAAmB,WACfC,EAAKC,MAAMC,QAAQC,KAAK,kFAG1B,OAEEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzBT,EAAAC,EAAAC,cAAA,iCAAyBQ,KAAKb,MAAMc,oBAGxCX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzBT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAKf,kBAAkBK,EAAAC,EAAAC,cAAA,iCAjB3BY,IAAMC,WA0BlBC,cAAWtB,mFC/B5B,SAASuB,IAGFC,KAAKC,MAAMC,aAAaC,QAAQ,qBAE/BX,KAAKY,KAAKJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAC1CX,KAAKa,iBAAgB,GAM7BN,EAAMO,UAAUC,SAAS,SAASH,GAC9BZ,KAAKY,KAAKA,EACVF,aAAaM,QAAQ,iBAAkBR,KAAKS,UAAUjB,KAAKY,OAC3DM,QAAQC,IAAInB,MACZA,KAAKa,iBAAgB,GAGzBN,EAAMO,UAAUM,QAAQ,WACpB,OAAOpB,KAAKY,MAED,IAAAS,EAAA,IAAId,ECXbe,6MAGFC,WAAa,WAMT,IALA,IAAIC,EAAO,GACPC,EAAQvC,EAAKC,MAAMsC,MAIdC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,IAAIE,EAAe,GACnBA,EAAavC,KAAKC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiC,IAAK,IAAIC,KAAS,OAASJ,EAAGhC,UAAU,YAAYG,GAAI,EAAGC,GAAI,EAAGiC,GAAI,GACxFN,EAAMC,GAAGM,KADI,QAElBJ,EAAavC,KAAKC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiC,IAAK,IAAIC,KAAS,MAAQJ,EAAGhC,UAAU,cAAcG,GAAI,EAAGC,GAAI,EAAGiC,GAAI,GACzFN,EAAMC,GAAGO,OADI,MAGlBT,EAAKnC,KAAKC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAeL,IAAK,IAAIC,KAAS,QAAUJ,GAAGpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAMmC,KAElE,OAAOJ,2EAIP,OAEIlC,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KAEKnC,KAAKuB,qBA1BEnB,IAAMC,WAuJf+B,cArHX,SAAAA,EAAYjD,EAAOkD,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAoC,IACxBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAA3C,KAAMb,EAAOkD,KAERO,gBAAkBN,EAAKM,gBAAgBC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAKU,aAAeV,EAAKU,aAAaH,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAKW,iBAAmBX,EAAKW,iBAAiBJ,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAExBA,EAAKY,MAAQ,CACTC,WAAW,EACXC,aAAc,IAVMd,kFAexB,IAAIe,EAAKrD,KACLsD,EAAU,CACVC,OAAQ,OACRC,IAAK,yDACLC,QACA,CACIC,cAAe,UAAWnD,EAAMa,UAAUuC,MAC1CC,eAAgB,oBAEpBC,KAAM,CAAE7B,KAAMhC,KAAKkD,MAAME,cACzBU,MAAM,GAEVC,IAAMT,GACLU,KAAK,SAASC,GAEXZ,EAAKlE,MAAM+E,UAMfb,EAAKN,gBAEJoB,MAAM,SAASC,GACZC,MAAMD,0CAKDE,GACTtE,KAAKuE,SAAS,CAAEnB,aAAckB,EAAEE,OAAOC,8CAIvCzE,KAAKuE,SAAS,CAAEpB,WAAW,EAAOC,aAAc,+CAKhDpD,KAAKuE,SAAS,CAAEpB,WAAW,qCAGtB,IAAAuB,EAAA1E,KACL,OAEIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,mBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACG,EAAA,EAAMgF,QAAP,KACIrF,EAAAC,EAAAC,cAACG,EAAA,EAAMiF,MAAP,CAAaC,eAAe,MAA5B,iBAEJvF,EAAAC,EAAAC,cAACG,EAAA,EAAMmF,KAAP,KACIxF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,sBACXJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAAS,kBAAMuE,EAAK9B,mBAAmBlD,UAAU,yBACrDJ,EAAAC,EAAAC,cAAA,mBAIZF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACuF,EAAD,CAAWtD,MAAOzB,KAAKb,MAAMsC,YAM7CnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,KAAMjF,KAAKkD,MAAMC,UAAW+B,OAAQlF,KAAK+C,aAC5CzD,EAAAC,EAAAC,cAACwF,EAAA,EAAMG,OAAP,KACI7F,EAAAC,EAAAC,cAACwF,EAAA,EAAMJ,MAAP,oBAGJtF,EAAAC,EAAAC,cAACwF,EAAA,EAAMF,KAAP,KACIxF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACIC,UAAU,iBAEV/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,wCACAhG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,SAAUxF,KAAKgD,aACfyC,KAAK,OACLhB,MAAOzE,KAAKkD,MAAME,aAClBsC,YAAY,eAEhBpG,EAAAC,EAAAC,cAAC+F,EAAA,EAAYI,SAAb,SAKZrG,EAAAC,EAAAC,cAACwF,EAAA,EAAMY,OAAP,KACItG,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAK+C,aAAtB,SACAzD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAKiD,iBAAkB4C,QAAQ,WAAhD,2BA5GLzF,IAAMC,WCrCvByF,cAEF,SAAAA,EAAY3G,EAAOkD,GAAS,IAAAnD,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAvC,KAAA8F,IACxB5G,EAAAqD,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAuD,GAAAnD,KAAA3C,KAAMb,EAAOkD,KAMjBW,aAAe,SAACsB,GACZpF,EAAKqF,SAAS,CAAEnB,aAAckB,EAAEE,OAAOC,SARfvF,EAU5B6D,YAAc,WAEV7D,EAAKqF,SAAS,CAAEpB,WAAW,EAAOC,aAAc,MAZxBlE,EAgB5B6G,cAAgB,WAQZ7G,EAAK6D,cACL7D,EAAKC,MAAM6G,SAAS9G,EAAKgE,MAAME,eAvB/BlE,EAAKgE,MAAQ,CACTC,WAAa,EACbC,aAAgB,IAJIlE,yFA8BF+G,GAClBA,EAAU9C,YAAcnD,KAAKkD,MAAMC,WACnCnD,KAAKuE,SAAS,CAAEpB,UAAW8C,EAAU9C,6CAMzC,OACI7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,KAAMjF,KAAKkD,MAAMC,UAAW+B,OAAQlF,KAAK+C,aAC5CzD,EAAAC,EAAAC,cAACwF,EAAA,EAAMG,OAAP,KACI7F,EAAAC,EAAAC,cAACwF,EAAA,EAAMJ,MAAP,oBAGJtF,EAAAC,EAAAC,cAACwF,EAAA,EAAMF,KAAP,KACIxF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACIC,UAAU,iBAEV/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,wCACAhG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,SAAUxF,KAAKgD,aACfyC,KAAK,OACLhB,MAAOzE,KAAKkD,MAAME,aAClBsC,YAAY,eAEhBpG,EAAAC,EAAAC,cAAC+F,EAAA,EAAYI,SAAb,SAKZrG,EAAAC,EAAAC,cAACwF,EAAA,EAAMY,OAAP,KACItG,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAK+C,aAAtB,SACAzD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAK+F,cAAeF,QAAQ,WAA7C,0BAlEazF,IAAMC,WA0I5B6F,cA9DX,SAAAA,EAAY/G,EAAOkD,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAkG,IACxB5D,EAAAC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAA3C,KAAMb,EAAOkD,KAOjB8D,gBAAkB,WACd7D,EAAKiC,SAAS,CAAEpB,WAAW,KATHb,EAY5ByD,cAAgB,SAACK,GAGb,IAAI/C,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,IACLuB,EAAO,CACPN,OAAQ,OACRC,IAAK,8CACLC,QACA,CACIC,cAAe,UAAYnD,EAAMa,UAAUuC,MAC3CC,eAAgB,oBAEpBC,KAAM,CAAEwC,QAASD,GACjBtC,MAAM,GAGVC,IAAMF,GACLG,KAAK,SAASC,GACX/C,QAAQC,IAAI8C,GACZZ,EAAKkB,SAAS,CAAEpB,WAAW,IAC3BE,EAAKlE,MAAM+E,YAEdC,MAAM,SAASC,GACZC,MAAMD,MAjCV9B,EAAKY,MAAQ,CACTC,WAAa,GAHOb,wEAsCnB,IAAAoC,EAAA1E,KACL,OAEIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,oCAA4BQ,KAAKb,MAAMmH,eAG/ChH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAAS,kBAAMuE,EAAKyB,oBAAmB7G,EAAAC,EAAAC,cAAA,uBAI3DF,EAAAC,EAAAC,cAAC+G,EAAD,CAAwBpD,UAAWnD,KAAKkD,MAAMC,UAC1C6C,SAAU,SAAC/D,GAAayC,EAAKqB,cAAc9D,cAzDrC7B,IAAMC,WCbjBmG,cAvDX,SAAAA,EAAYrH,GAAO,IAAAD,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAvC,KAAAwG,IACftH,EAAAqD,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAiE,GAAA7D,KAAA3C,KAAMb,KACD+D,MAAM,CACPjD,iBAAiB,KACjBwB,MAAO,GACP6E,YAAY,OAIhBpH,EAAKuH,kBAAkBvH,EAAKuH,kBAAkB5D,KAAvBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAArD,KATRA,mFAaf,IAAImE,EAAKrD,KACLsD,EAAU,CACVC,OAAQ,MACRC,IAAK,8CACLC,QAAS,CAAEC,cAAe,UAAWnD,EAAMa,UAAUuC,QAGzDI,IAAMT,GACLU,KAAK,SAASC,GACX/C,QAAQC,IAAI8C,EAASJ,KAAK6C,QAAQC,YAClC1C,EAASJ,KAAK6C,QAAQC,WAAWC,QAAQ,SAAAC,GACjCA,EAAK5E,SACL4E,EAAK5E,OAAO,KAGpB,IAAI6E,EAASvE,OAAOwE,OAAO,GAAG1D,EAAKH,OACnC4D,EAASrF,MAAMwC,EAASJ,KAAK6C,QAAQC,WACrCG,EAAS7G,iBAAkBgE,EAASJ,KAAK6C,QAAQzG,iBACjD6G,EAASR,YAAYrC,EAASJ,KAAK6C,QAAQJ,YAC3CjD,EAAKkB,SAASuC,KAEjB3C,MAAM,SAASC,GACZC,MAAMD,iDAIVpE,KAAKyG,qDAGL,OACInH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACI1H,EAAAC,EAAAC,cAACyH,EAAD,CAAgBhH,iBAAkBD,KAAKkD,MAAMjD,mBAE7CX,EAAAC,EAAAC,cAAC0H,EAAD,CAAUzF,MAAOzB,KAAKkD,MAAMzB,MAAOyC,QAASlE,KAAKyG,oBAEjDnH,EAAAC,EAAAC,cAAC2H,EAAD,CAAab,YAAatG,KAAKkD,MAAMoD,YAAapC,QAASlE,KAAKyG,4BAlDzDpG,+BCCjB+G,cAEF,SAAAA,EAAYjI,EAAOkD,GAAS,IAAAnD,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAvC,KAAAoH,IACxBlI,EAAAqD,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA6E,GAAAzE,KAAA3C,KAAMb,EAAOkD,KAOjBgF,eAAiB,SAACC,GAGd,GAAIpI,EAAKgE,MAAMqE,gBAAkBD,EAAO,CACpC,IAAIR,EAAWvE,OAAOwE,OAAO,GAAI7H,EAAKgE,OACtC4D,EAASS,cAAgBrI,EAAKC,MAAMsC,MAAM6F,GAAOtF,KACjD9C,EAAKqF,SAASuC,GACd5H,EAAKC,MAAMkI,eAAeC,KAfNpI,EAsB5BsI,eAAiB,WAIb,IAHA,IAAIhG,EAAO,GACPC,EAAQvC,EAAKC,MAAMsC,MAEdC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAK9BF,EAAKnC,KAAKC,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAU5F,IAAKH,EAAI,IAAII,KAAQ4F,SAAUxI,EAAKmI,eAAgBM,SAAUjG,GAAKD,EAAMC,GAAGM,OAEpG,OAAOR,GA9BPtC,EAAKgE,MAAQ,CACTqE,cAAiB,qBAJGrI,wEAqCxB,OACII,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACI/B,QAAQ,UACRgC,MAAO7H,KAAKkD,MAAMqE,cAClB1F,IAAI,6BACJiG,GAAE,kBAED9H,KAAKwH,yBA9CUpH,IAAMC,WAkOvB0H,cArIX,SAAAA,EAAY5I,EAAOkD,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA+H,IACxBzF,EAAAC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAwF,GAAApF,KAAA3C,KAAMb,EAAOkD,KAxCjB2F,YAAc,EAuCc1F,EAtC5B2F,oBAAqB,EAsCO3F,EArC5B+E,eAAiB,SAACa,GACd5F,EAAK0F,YAAcE,EAEnB,IAAIpB,EAAWvE,OAAOwE,OAAO,GAAIzE,EAAKY,OAKtC,GAJA4D,EAASqB,cAAe,GAInBC,MAAMC,OAAO/F,EAAKY,MAAMoF,sBAAuB,CAEhD,IAAIC,EAAc,CACd/D,OAAQ,CACJC,MAAOqC,EAASwB,sBAGxBhG,EAAK2F,oBAAqB,EAC1B3F,EAAKkG,2BAA2BD,GAIpCjG,EAAKiC,SAASuC,IAiBUxE,EAd5BkG,2BAA6B,SAAClE,GAC1B,IAAIwC,EAAWvE,OAAOwE,OAAO,GAAIzE,EAAKY,OACtC4D,EAASwB,oBAAsBhE,EAAEE,OAAOC,OACnCnC,EAAKY,MAAMiF,eAAgB7F,EAAK2F,oBAAwBG,MAAMC,OAAO/F,EAAKY,MAAMoF,wBACjFpH,QAAQC,IAAI,iBAEZ2F,EAASrF,MAAMa,EAAK0F,aAAaS,UAAY3B,EAASrF,MAAMa,EAAK0F,aAAa/F,OAASoG,OAAOvB,EAASwB,qBACvGxB,EAAS4B,oBAAsB5B,EAAS6B,wBAA0BN,OAAOvB,EAASwB,qBAElFpH,QAAQC,IAAI2F,EAASrF,MAAMa,EAAK0F,aAAaS,YAEjDnG,EAAKiC,SAASuC,IAGUxE,EA4C5BsG,aAAe,WACXtG,EAAKnD,MAAMC,QAAQC,KAAK,MA7CAiD,EAgD5BuG,gBAAgB,WACZ,IAAIxF,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,IACLgB,EAAU,CACVC,OAAQ,QACRC,IAAK,wDACLC,QACA,CACIC,cAAe,UAAUnD,EAAMa,UAAUuC,MACzCC,eAAgB,oBAEpBC,KAAM,CAAE5B,OAAQK,EAAKY,MAAMzB,MAAMa,EAAK0F,aAAaS,UAC/CX,GAAIxF,EAAKY,MAAMzB,MAAMa,EAAK0F,aAAac,KAC3ChF,MAAM,GAEVC,IAAMT,GACLU,KAAK,SAASC,GAEX/C,QAAQC,IAAI8C,EAASJ,MACrBR,EAAKuF,iBAERzE,MAAM,SAASC,GACZC,MAAMD,MAlEV9B,EAAKY,MAAQ,CACTyF,wBAAyB,MACzBL,oBAAqB,GACrBH,cAAc,EACd1G,MAAO,CAAC,CACJO,KAAM,GACNC,OAAS,KATOK,mFAexB,IAAIe,EAAKrD,KACLsD,EAAU,CACVC,OAAQ,MACRC,IAAK,8CACLC,QAAS,CAAEC,cAAe,UAAWnD,EAAMa,UAAUuC,QAGzDI,IAAMT,GACLU,KAAK,SAASC,GACX/C,QAAQC,IAAI8C,EAASJ,KAAK6C,QAAQC,YAClC1C,EAASJ,KAAK6C,QAAQC,WAAWC,QAAQ,SAAAC,GACjCA,EAAK5E,SACL4E,EAAK5E,OAAO,KAGpB,IAAI6E,EAASvE,OAAOwE,OAAO,GAAG1D,EAAKH,OACnC4D,EAASrF,MAAMwC,EAASJ,KAAK6C,QAAQC,WACrCG,EAAS6B,wBAAwB1E,EAASJ,KAAK6C,QAAQzG,iBACvD6G,EAASiC,eAAiB9E,EAASJ,KAAK6C,QAAQzG,iBAChDoD,EAAKkB,SAASuC,KAEjB3C,MAAM,SAASC,GACZC,MAAMD,iDAIVpE,KAAKyG,qDAgCL,OAEInH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuJ,MAAO,CAAEC,UAAa,SACvB3J,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACLP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAK4I,cAAe,OAG7CtJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,yCAAiCQ,KAAKkD,MAAM6F,eAAiB/I,KAAKkD,MAAM6F,eAAiB/I,KAAKkD,MAAMyF,2BAG5GrJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAC0J,EAAD,CAAmBzH,MAAOzB,KAAKkD,MAAMzB,MAAO4F,eAAgBrH,KAAKqH,mBAGzE/H,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAKH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YACXF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACIC,UAAU,iBAEV/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,iCACAhG,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,SAAUxF,KAAKwI,2BACf/C,KAAK,OACLC,YAAY,iBAEhBpG,EAAAC,EAAAC,cAAC+F,EAAA,EAAYI,SAAb,UAKhBrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnBT,EAAAC,EAAAC,cAAA,MAAI2J,OAAQnJ,KAAKkD,MAAMiF,cAAvB,oBACA7I,EAAAC,EAAAC,cAAA,MAAI2J,QAASnJ,KAAKkD,MAAMiF,cAAxB,IAAwCnI,KAAKkD,MAAMzB,MAAMzB,KAAKgI,aAAahG,KAA3E,cAA4FhC,KAAKkD,MAAMzB,MAAMzB,KAAKgI,aAAaS,UAAYzI,KAAKkD,MAAMzB,MAAMzB,KAAKgI,aAAaS,UAAYzI,KAAKkD,MAAMzB,MAAMzB,KAAKgI,aAAa/F,SAGjO3C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAEnBT,EAAAC,EAAAC,cAAA,0CAA6D4J,GAAhCpJ,KAAKkD,MAAMwF,oBAAiC1I,KAAKkD,MAAMwF,oBAAsB1I,KAAKkD,MAAMyF,2BAI7HrJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACLP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAK6I,gBAAiBhD,QAAQ,WAA/C,+BArKHzF,IAAMC,WCkBhBgJ,6MAtEXC,aAAe,WACX,IAAIjG,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAArD,IAET6E,IAAM,CACFR,OAAQ,OACRC,IAAK,iDACLK,KAAM,CAGF0F,MAAOrK,EAAKqK,MACZC,SAAUtK,EAAKsK,YAGlBxF,KAAK,SAAUC,GAEZ1D,EAAMQ,SAAS,CACXwI,MAAO,qBACP5F,MAAQM,EAASJ,KAAKF,QAE1BN,EAAKlE,MAAMC,QAAQC,KAAK,OAE3B8E,MAAM,SAAUC,GACblD,QAAQC,IAAIiD,GACZC,MAAM7D,KAAKS,UAAUmD,EAAMH,SAASJ,KAAK4F,WAMrDC,kBAAoB,SAACpF,GACjBpF,EAAKqK,MAAMjF,EAAEE,OAAOC,SAExBkF,qBAAsB,SAACrF,GACnBpF,EAAKsK,SAASlF,EAAEE,OAAOC,+EAGvB,OAEInF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KAEI9F,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,SAAUxF,KAAK0J,kBACfjE,KAAK,QACLC,YAAY,gBAEhBpG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,SAAUxF,KAAK2J,qBACflE,KAAK,WACLC,YAAY,mBAEhBpG,EAAAC,EAAAC,cAAC+F,EAAA,EAAYI,SAAb,SAIZrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASH,KAAKsJ,aAAczD,QAAQ,WAAUvG,EAAAC,EAAAC,cAAA,8BA/D9DY,IAAMC,WCFpBuJ,mLAEE,OACItK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,KAEAvK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsK,EAAD,CAAcC,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACpClH,EAAAC,EAAAC,cAACsK,EAAD,CAAcE,KAAK,QAAQC,UAAWC,IACtC5K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOH,KAAK,SAASC,UAAWG,aARzBhK,IAAMC,WAkBvBgK,EAAe,SAAAC,GAAA,IAAcjK,EAAdiK,EAAGL,UAAyBM,EAA5BhI,OAAAiI,EAAA,EAAAjI,CAAA+H,EAAA,sBAEjBhL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD5H,OAAAwE,OAAA,GACMwD,EADN,CAEEE,OAAQ,SAAAtL,GAAK,OACXoB,EAAMM,gBACJvB,EAAAC,EAAAC,cAACa,EAAclB,GAEfG,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,SACV1H,MAAO,CAAE2H,KAAM1L,EAAM2L,kBAOpBlB,ICjCKmB,QACW,cAA7BC,OAAOF,SAASG,UAEe,UAA7BD,OAAOF,SAASG,UAEhBD,OAAOF,SAASG,SAASC,MACvB,2DCRNC,IAASV,OAAOnL,EAAAC,EAAAC,cAAC4L,EAAD,MAAcC,SAASC,eAAe,SDiHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzH,KAAK,SAAA0H,GACjCA,EAAaC","file":"static/js/main.1ae5a614.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col,Button,Panel } from 'react-bootstrap';\nimport './currentAccount.css';\nimport { withRouter } from 'react-router'\n\nclass CurrentAccount extends React.Component {\n\n    goToTransferPage = ()=>{\n        this.props.history.push(\"/save\");\n    }\n    render() {\n      return (\n\n        <Row className=\"element-root\">\n            <Panel>\n            <Row>\n                <Col xs={12} md={12} sm={12}>\n                <h5>Remaining Balance : {this.props.remainingBalance}</h5>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12} md={12} sm={12}>\n                <Button onClick={this.goToTransferPage}><b>Transfer</b></Button>\n                </Col>\n            </Row>\n            </Panel>\n        </Row>\n      );\n    }\n  }\n  \n  export default withRouter(CurrentAccount);","function Store(){\n    // Load user from localstorage and set value of isAuthenticated\n\n    if(JSON.parse(localStorage.getItem(\"piggy-app-user\"))) {\n        \n        this.user=JSON.parse(localStorage.getItem(\"piggy-app-user\"));\n        this.isAuthenticated=true;\n        // debugger;\n    }\n\n}\n\nStore.prototype.saveUser=function(user) {\n    this.user=user;\n    localStorage.setItem(\"piggy-app-user\", JSON.stringify(this.user));\n    console.log(this)\n    this.isAuthenticated=true;\n}\n\nStore.prototype.getUser=function(){\n    return this.user;\n}\nexport default new Store();","import React from 'react';\nimport {\n    Modal, Button, Row,\n    Col, ListGroup, Panel,\n    FormGroup, FormControl, ControlLabel,\n    ListGroupItem\n} from 'react-bootstrap';\nimport './accounts.css';\nimport axios from 'axios';\nimport Store from './../user/userStore';\n\nclass ListItems extends React.Component {\n\n    // @Todo : Proper unique key for every added element\n    createList = () => {\n        let list = []\n        let funds = this.props.funds;\n\n        // debugger;\n        // Outer loop to create parent\n        for (let i = 0; i < funds.length; i++) {\n            let fundComplete = [];\n            fundComplete.push(<Col key={new Date() + \"name\" + i} className=\"fund-name\" xs={6} md={6} lg={6}>\n                {funds[i].name} : </Col>);\n            fundComplete.push(<Col key={new Date() + \"amt\" + i} className=\"fund-amount\" xs={6} md={6} lg={6}>\n                {funds[i].amount} </Col>);\n            //Create the parent and add the children\n            list.push(<ListGroupItem key={new Date() + \"items\" + i}><Row>{fundComplete}</Row></ListGroupItem>)\n        }\n        return list\n    }\n    render() {\n\n        return (\n\n            <ListGroup>\n\n                {this.createList()}\n            </ListGroup>\n        );\n    }\n};\n\nclass Accounts extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.addNewPiggyBank = this.addNewPiggyBank.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.saveNewPiggyBank = this.saveNewPiggyBank.bind(this);\n\n        this.state = {\n            showModal: false,\n            newBankvalue: ''\n        };\n    }\n\n    saveNewPiggyBank() {\n        let self=this;\n        var options = { \n            method: 'POST',\n            url: 'https://bank-piggy.herokuapp.com/v1/account/piggy-bank',\n            headers:\n            {\n                authorization: 'Bearer '+ Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { name: this.state.newBankvalue },\n            json: true\n        };\n        axios(options)\n        .then(function(response){\n\n            self.props.refresh();\n            // debugger;\n        //     let newState = Object.assign({}, self.state);\n        // newState.funds.push({ name: self.state.newBankvalue, amount: 0 });\n        // newState.newBankvalue = '';\n        // this.setState(newState);\n        self.handleClose();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n        \n    }\n\n    handleChange(e) {\n        this.setState({ newBankvalue: e.target.value });\n    }\n    handleClose() {\n\n        this.setState({ showModal: false, newBankvalue: '' });\n    }\n\n\n    addNewPiggyBank() {\n        this.setState({ showModal: true });\n    }\n\n    render() {\n        return (\n\n            <Row className=\"piggy-bank-root\">\n                <Panel>\n                    <Panel.Heading>\n                        <Panel.Title componentClass=\"h3\">Piggy Banks </Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body>\n                        <Row className=\"add-piggy-bank-row\">\n                            <Col xs={12} md={12} sm={12}>\n                                <Button onClick={() => this.addNewPiggyBank()} className=\"add-piggy-bank-button\" >\n                                    <b>Add</b>\n                                </Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} md={12} sm={12}>\n                                <ListItems funds={this.props.funds} />\n                            </Col>\n                        </Row>\n\n                    </Panel.Body>\n                </Panel>\n                <div className=\"static-modal\">\n                    <Modal show={this.state.showModal} onHide={this.handleClose}>\n                        <Modal.Header>\n                            <Modal.Title>Enter Name</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <form>\n                                <FormGroup\n                                    controlId=\"formBasicText\"\n                                >\n                                    <ControlLabel>Working example with validation</ControlLabel>\n                                    <FormControl\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.newBankvalue}\n                                        placeholder=\"Enter text\"\n                                    />\n                                    <FormControl.Feedback />\n                                </FormGroup>\n                            </form>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button onClick={this.handleClose}>Close</Button>\n                            <Button onClick={this.saveNewPiggyBank} bsStyle=\"primary\">Save changes</Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            </Row>\n\n        );\n    }\n}\n\n\nexport default Accounts;","import React from 'react';\nimport { Row, Col, Button, Panel, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\nimport './currentAccount.css';\nimport Store from './../user/userStore';\nimport axios from 'axios';\n\nclass UpdateMainAccountModal extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            \"showModal\": false,\n            \"newBankvalue\": ''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({ newBankvalue: e.target.value });\n    }\n    handleClose = () => {\n\n        this.setState({ showModal: false, newBankvalue: '' });\n\n    }\n\n    updateMainBal = () => {\n        // let newState = Object.assign({}, this.state);\n        // newState.funds.push({ name: this.state.newBankvalue, amount: 0 });\n        // newState.newBankvalue = '';\n        // this.setState(newState);\n        // debugger;\n    \n\n        this.handleClose();\n        this.props.onUpdate(this.state.newBankvalue);\n        // debugger;\n       \n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.showModal !== this.state.showModal) {\n            this.setState({ showModal: nextProps.showModal });\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"static-modal\">\n                <Modal show={this.state.showModal} onHide={this.handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Enter Name</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <form>\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                            >\n                                <ControlLabel>Working example with validation</ControlLabel>\n                                <FormControl\n                                    onChange={this.handleChange}\n                                    type=\"text\"\n                                    value={this.state.newBankvalue}\n                                    placeholder=\"Enter text\"\n                                />\n                                <FormControl.Feedback />\n                            </FormGroup>\n                        </form>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button onClick={this.handleClose}>Close</Button>\n                        <Button onClick={this.updateMainBal} bsStyle=\"primary\">Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n        );\n    }\n}\nclass MainAccount extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            \"showModal\": false\n        };\n\n\n    }\n    openUpdateModal = () => {\n        this.setState({ showModal: true });\n    }\n\n    updateMainBal = (mainBalanceAmount) => {\n        // debugger;\n        // this.setState({\"mainBalanceAmount\":mainBalanceAmount});\n        var self=this;\n        let data = {\n            method: 'POST',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers:\n            {\n                authorization: 'Bearer ' + Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { balance: mainBalanceAmount },\n            json: true\n        };\n\n        axios(data)\n        .then(function(response){\n            console.log(response);\n            self.setState({ showModal: false });\n            self.props.refresh();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n    }\n    render() {\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <h5>Main Account Balance : {this.props.mainBalance}</h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <Button onClick={() => this.openUpdateModal()}><b>Update</b></Button>\n                        </Col>\n                    </Row>\n                </Panel>\n                <UpdateMainAccountModal showModal={this.state.showModal}\n                    onUpdate={(amount) => { this.updateMainBal(amount) }} />\n            </Row>\n        );\n    }\n}\n\n//   export default RequiredAuth(MainAccount);\nexport default MainAccount;","import React, { Component } from 'react';\nimport { Grid } from 'react-bootstrap';\nimport './App.css';\n\nimport CurrentAccount from './CurrentAccount';\nimport Accounts from './accounts';\nimport MainAccount from './mainAccount';\nimport Store from './../user/userStore';\nimport axios from \"axios\";\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            remainingBalance:4400,\n            funds :[],\n            mainBalance:90500\n            \n        }\n\n        this.getDataFromServer=this.getDataFromServer.bind(this);\n    }\n\n    getDataFromServer() {\n        var self=this;\n        var options = {\n            method: 'GET',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers: { authorization: 'Bearer '+ Store.getUser().token}\n        };\n\n        axios(options)\n        .then(function(response){\n            console.log(response.data.account.piggybanks)\n            response.data.account.piggybanks.forEach(bank => {\n                if(!bank.amount)\n                    bank.amount=0;\n            });\n\n            let newState=Object.assign({},self.state);\n            newState.funds=response.data.account.piggybanks;\n            newState.remainingBalance= response.data.account.remainingBalance;\n            newState.mainBalance=response.data.account.mainBalance;\n            self.setState(newState);\n        })\n        .catch(function(error){\n            alert(error);\n        })\n    }\n    componentDidMount() {\n        this.getDataFromServer();\n    }\n    render() {\n        return (\n            <Grid>\n                <CurrentAccount remainingBalance={this.state.remainingBalance}/>\n\n                <Accounts funds={this.state.funds} refresh={this.getDataFromServer}/>\n\n                <MainAccount mainBalance={this.state.mainBalance} refresh={this.getDataFromServer}/>\n\n            </Grid>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {\n    Row, Col, Button,\n    MenuItem, DropdownButton,\n    Panel, FormGroup, FormControl, ControlLabel\n} from 'react-bootstrap';\nimport './../home/currentAccount.css';\n\nimport axios from 'axios';\nimport Store from './../user/userStore';\n\nclass DropDownWithItems extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            \"dropDownTitle\": \"Select Piggy Bank\"\n        }\n    }\n\n    onFundSelected = (index) => {\n        // console.log(event);\n\n        if (this.state.dropDownTitle !== index) {\n            let newState = Object.assign({}, this.state);\n            newState.dropDownTitle = this.props.funds[index].name;\n            this.setState(newState);\n            this.props.onFundSelected(index);\n        }\n\n    }\n\n\n    // @Todo : Proper unique key for every added element\n    createDropDown = () => {\n        let list = []\n        let funds = this.props.funds;\n        // Outer loop to create parent\n        for (let i = 0; i < funds.length; i++) {\n            // let fundComplete = [];\n            // fundComplete.push(<Col key={new Date()+\"name\"+i} className=\"fund-name\" xs={6} md={6} lg={6}>\n            //     {funds[i].name} : </Col>);\n            //Create the parent and add the children\n            list.push(<MenuItem key={i + new Date()} onSelect={this.onFundSelected} eventKey={i} >{funds[i].name}</MenuItem>)\n        }\n        return list\n    }\n    render() {\n\n        return (\n            <DropdownButton\n                bsStyle=\"default\"\n                title={this.state.dropDownTitle}\n                key=\"dropDownButtonInSaveToBank\"\n                id={`dropdown-basic`}>\n\n                {this.createDropDown()}\n            </DropdownButton>\n        )\n    }\n};\n\nclass SaveToBank extends React.Component {\n\n    currentFund = 0;\n    forceUpdateAmounts = false;\n    onFundSelected = (fundIndex) => {\n        this.currentFund = fundIndex;\n\n        let newState = Object.assign({}, this.state);\n        newState.fundSelected = true;\n\n\n        // debugger;\n        if (!isNaN(Number(this.state.transferAmountValue))) {\n\n            let forceObject = {\n                target: {\n                    value: newState.transferAmountValue\n                }\n            }\n            this.forceUpdateAmounts = true;\n            this.handleTransferAmountChange(forceObject);\n        }\n\n\n        this.setState(newState);\n    }\n\n    handleTransferAmountChange = (e) => {\n        let newState = Object.assign({}, this.state);\n        newState.transferAmountValue = e.target.value;\n        if ((this.state.fundSelected || this.forceUpdateAmounts) && !isNaN(Number(this.state.transferAmountValue))) {\n            console.log(\"value changed\");\n\n            newState.funds[this.currentFund].newAmount = newState.funds[this.currentFund].amount + Number(newState.transferAmountValue);\n            newState.newRemainingBalance = newState.remainingAccountBalance - Number(newState.transferAmountValue);\n\n            console.log(newState.funds[this.currentFund].newAmount);\n        }\n        this.setState(newState);\n    }\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            remainingAccountBalance: 14400,\n            transferAmountValue: '',\n            fundSelected: false,\n            funds: [{\n                name :'',\n                amount : 0\n            }]\n        }\n    }\n\n    getDataFromServer() {\n        var self=this;\n        var options = {\n            method: 'GET',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers: { authorization: 'Bearer '+ Store.getUser().token}\n        };\n\n        axios(options)\n        .then(function(response){\n            console.log(response.data.account.piggybanks)\n            response.data.account.piggybanks.forEach(bank => {\n                if(!bank.amount)\n                    bank.amount=0;\n            });\n\n            let newState=Object.assign({},self.state);\n            newState.funds=response.data.account.piggybanks;\n            newState.remainingAccountBalance=response.data.account.remainingBalance;\n            newState.currentBalance = response.data.account.remainingBalance;\n            self.setState(newState);\n        })\n        .catch(function(error){\n            alert(error);\n        })\n    }\n    componentDidMount() {\n        this.getDataFromServer();\n    }\n\n    goToHomePage = () => {\n        this.props.history.push(\"/\");\n    }\n\n    executeTransfer=()=> {\n        let self=this;\n        var options = {\n            method: 'PATCH',\n            url: 'http://bank-piggy.herokuapp.com/v1/account/piggy-bank',\n            headers:\n            {\n                authorization: 'Bearer '+Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { amount: this.state.funds[this.currentFund].newAmount, \n                id: this.state.funds[this.currentFund]._id },\n            json: true\n        };\n        axios(options)\n        .then(function(response){\n            // Redirect to home page\n            console.log(response.data);\n            self.goToHomePage();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n    }\n    render() {\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row style={{ \"textAlign\": \"left\" }}>\n                        <Col xs={3}>\n                            <Button onClick={this.goToHomePage}>{\"<\"}</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <h5>Current Remaining Balance : {this.state.currentBalance ? this.state.currentBalance : this.state.remainingAccountBalance}</h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <DropDownWithItems funds={this.state.funds} onFundSelected={this.onFundSelected} />\n                        </Col>\n                    </Row>\n                    <Row><br /><br /></Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <form>\n                                <FormGroup\n                                    controlId=\"formBasicText\"\n                                >\n                                    <ControlLabel>Enter Amount to transfer</ControlLabel>\n                                    <FormControl\n                                        onChange={this.handleTransferAmountChange}\n                                        type=\"text\"\n                                        placeholder=\"Enter Amount\"\n                                    />\n                                    <FormControl.Feedback />\n                                </FormGroup>\n                            </form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6} md={6} sm={6}>\n                            <h5 hidden={this.state.fundSelected}>No fund selected</h5>\n                            <h5 hidden={!this.state.fundSelected}> {this.state.funds[this.currentFund].name} balance : {this.state.funds[this.currentFund].newAmount ? this.state.funds[this.currentFund].newAmount : this.state.funds[this.currentFund].amount}</h5>\n                        </Col>\n\n                        <Col xs={6} md={6} sm={6}>\n\n                            <h5> New Remaining balance :{this.state.newRemainingBalance!=undefined ? this.state.newRemainingBalance : this.state.remainingAccountBalance}</h5>\n                        </Col>\n\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <Button onClick={this.executeTransfer} bsStyle=\"primary\">Confirm Transfer</Button>\n                        </Col>\n                    </Row>\n                </Panel>\n            </Row>\n        );\n    }\n}\n\nexport default SaveToBank;","import React from 'react';\nimport {\n    Row, Col, Button, Panel,\n    FormGroup, FormControl, ControlLabel\n} from 'react-bootstrap';\nimport './../home/currentAccount.css';\nimport Store from './userStore';\nimport axios from \"axios\";\n\nclass Login extends React.Component {\n\n    attemptLogin = () => {\n        var self=this;\n        // Send a POST request\n        axios({\n            method: 'post',\n            url: 'https://bank-piggy.herokuapp.com/v1/user/login',\n            data: {\n                // email: 'tauseef.naqvi786@gmail.com',\n                // password: 'india123'\n                email: this.email,\n                password: this.password\n            }\n        })\n            .then(function (response) {\n                // console.log(response)\n                Store.saveUser({\n                    email: \"jafar912@gmail.com\",\n                    token : response.data.token\n                });\n                self.props.history.push(\"/\");\n            })\n            .catch(function (error) {\n                console.log(error);\n                alert(JSON.stringify(error.response.data.msg));\n            })\n\n\n    }\n\n    handleEmailChange = (e)=> {\n        this.email=e.target.value;\n    }\n    handlePasswordChange =(e)=>{\n        this.password=e.target.value;\n    }\n    render() {\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <FormGroup\n                            >\n                                <FormControl\n                                    onChange={this.handleEmailChange}\n                                    type=\"email\"\n                                    placeholder=\"Enter email\"\n                                />\n                                <br />\n                                <FormControl\n                                    onChange={this.handlePasswordChange}\n                                    type=\"password\"\n                                    placeholder=\"Enter password\"\n                                />\n                                <FormControl.Feedback />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <Button onClick={this.attemptLogin} bsStyle=\"primary\"><b>Login</b></Button>\n                        </Col>\n                    </Row>\n                </Panel>\n            </Row>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport HomePage from './home/homePage';\nimport saveToBankPage from './savings/saveToBankPage';\nimport LoginPage from './user/loginPage';\nimport Store from './user/userStore';\nclass PiggyApp extends React.Component {\n    render() {\n        return (\n            <Router>\n\n            <div>\n            <PrivateRoute exact path=\"/\" component={HomePage} />\n                <PrivateRoute path=\"/save\" component={saveToBankPage} />\n                <Route path=\"/login\" component={LoginPage} />\n            </div>\n                \n\n            </Router>\n\n        );\n    }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    \n    <Route\n      {...rest}\n      render={props =>\n        Store.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\nexport default PiggyApp;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Tinker from './tinker';\nimport PiggyApp from './piggy-app';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PiggyApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}