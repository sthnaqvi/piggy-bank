{"version":3,"sources":["moneyFormater.js","home/CurrentAccount.js","user/userStore.js","home/accounts.js","home/mainAccount.js","nav.js","home/homePage.js","savings/saveToBankPage.js","user/loginPage.js","piggy-app.js","serviceWorker.js","index.js"],"names":["MoneyFormater","prototype","format","amount","toFixed","replace","moneyFormater","CurrentAccount","react_default","a","createElement","Row","className","Panel","Col","xs","md","sm","this","props","remainingBalance","Button","onClick","goToTransferPage","React","Component","Store","JSON","parse","localStorage","getItem","user","isAuthenticated","saveUser","setItem","stringify","console","log","getUser","deleteUser","removeItem","userStore","ListItems","createList","list","funds","_this","i","length","fundComplete","push","key","Date","lg","name","ListGroupItem","ListGroup","Accounts","context","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addNewPiggyBank","bind","assertThisInitialized","handleClose","handleChange","saveNewPiggyBank","state","showModal","newBankvalue","self","options","method","url","headers","authorization","token","content-type","data","json","axios","then","response","refresh","catch","error","alert","e","setState","target","value","_this3","Heading","Title","componentClass","Body","accounts_ListItems","Modal","show","onHide","Header","FormGroup","controlId","ControlLabel","FormControl","onChange","type","placeholder","Feedback","Footer","bsStyle","UpdateMainAccountModal","updateMainBal","onUpdate","nextProps","MainAccount","openUpdateModal","mainBalanceAmount","balance","mainBalance","mainAccount_UpdateMainAccountModal","MyNav","onSelect","toggleNav","Navbar","inverse","collapseOnSelect","staticTop","Brand","href","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","logout","HomePage","history","isLoading","getDataFromServer","account","piggybanks","forEach","bank","newState","assign","style","paddingTop","textAlign","Grid","fluid","nav_MyNav","home_CurrentAccount","home_accounts","mainAccount","DropDownWithItems","onFundSelected","index","dropDownTitle","createDropDown","MenuItem","DropdownButton","title","id","SaveToBank","currentFund","forceUpdateAmounts","fundIndex","fundSelected","isNaN","Number","transferAmountValue","forceObject","handleTransferAmountChange","newAmount","newRemainingBalance","remainingAccountBalance","goToHomePage","executeTransfer","_id","currentBalance","saveToBankPage_DropDownWithItems","hidden","undefined","Login","attemptLogin","email","password","msg","handleEmailChange","handlePasswordChange","PiggyApp","BrowserRouter","basename","process","piggy_app_PrivateRoute","exact","path","component","saveToBankPage","Route","LoginPage","PrivateRoute","_ref","rest","objectWithoutProperties","render","Redirect","to","pathname","from","location","Boolean","window","hostname","match","ReactDOM","piggy_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sYAAA,SAASA,KAETA,EAAcC,UAAUC,OAAO,SAASC,GAGpC,MAAO,MAFIA,EAAQC,QAAQ,GAAGC,QAAQ,wBAAyB,QAKpD,IAAAC,EAAA,IAAIN,ECsBFO,mLApBX,OAEEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzBT,EAAAC,EAAAC,cAAA,iCAAyBV,EAAcE,OAAOgB,KAAKC,MAAMC,qBAG7DZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzBT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKC,MAAMI,kBAAkBf,EAAAC,EAAAC,cAAA,iCAfjCc,IAAMC,2FCNnC,SAASC,IAGFC,KAAKC,MAAMC,aAAaC,QAAQ,qBAE/BZ,KAAKa,KAAKJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAC1CZ,KAAKc,iBAAgB,GAM7BN,EAAMzB,UAAUgC,SAAS,SAASF,GAC9Bb,KAAKa,KAAKA,EACVF,aAAaK,QAAQ,iBAAkBP,KAAKQ,UAAUjB,KAAKa,OAC3DK,QAAQC,IAAInB,MACZA,KAAKc,iBAAgB,GAGzBN,EAAMzB,UAAUqC,QAAQ,WACpB,OAAOpB,KAAKa,MAGhBL,EAAMzB,UAAUsC,WAAW,WACvBV,aAAaW,WAAW,mBAGb,IAAAC,EAAA,IAAIf,ECfbgB,6MAGFC,WAAa,WAMT,IALA,IAAIC,EAAO,GACPC,EAAQC,EAAK3B,MAAM0B,MAIdE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAK,CACnC,IAAIE,EAAe,GACnBA,EAAaC,KAAK1C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKqC,IAAK,IAAIC,KAAS,OAASL,EAAGnC,UAAU,YAAYG,GAAI,EAAGC,GAAI,EAAGqC,GAAI,GACxFR,EAAME,GAAGO,KADI,QAElBL,EAAaC,KAAK1C,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKqC,IAAK,IAAIC,KAAS,MAAQL,EAAGnC,UAAU,cAAcG,GAAI,EAAGC,GAAI,EAAGqC,GAAI,GACzFrD,EAAcE,OAAO2C,EAAME,GAAG5C,QADjB,MAGlByC,EAAKM,KAAK1C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAeJ,IAAK,IAAIC,KAAS,QAAUL,GAAGvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAMsC,KAElE,OAAOL,2EAIP,OAEIpC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KAEKtC,KAAKyB,qBA1BEnB,IAAMC,WAuJfgC,cArHX,SAAAA,EAAYtC,EAAOuC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1C,KAAAuC,IACxBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAA9C,KAAMC,EAAOuC,KAERO,gBAAkBN,EAAKM,gBAAgBC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAKU,aAAeV,EAAKU,aAAaH,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAKW,iBAAmBX,EAAKW,iBAAiBJ,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAExBA,EAAKY,MAAQ,CACTC,WAAW,EACXC,aAAc,IAVMd,kFAexB,IAAIe,EAAKxD,KACLyD,EAAU,CACVC,OAAQ,OACRC,IAAK,yDACLC,QACA,CACIC,cAAe,UAAWrD,EAAMY,UAAU0C,MAC1CC,eAAgB,oBAEpBC,KAAM,CAAE5B,KAAMpC,KAAKqD,MAAME,cACzBU,MAAM,GAEVC,IAAMT,GACLU,KAAK,SAASC,GAEXZ,EAAKvD,MAAMoE,UAMfb,EAAKN,gBAEJoB,MAAM,SAASC,GACZC,MAAMD,0CAKDE,GACTzE,KAAK0E,SAAS,CAAEnB,aAAckB,EAAEE,OAAOC,8CAIvC5E,KAAK0E,SAAS,CAAEpB,WAAW,EAAOC,aAAc,+CAKhDvD,KAAK0E,SAAS,CAAEpB,WAAW,qCAGtB,IAAAuB,EAAA7E,KACL,OAEIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,mBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACG,EAAA,EAAMmF,QAAP,KACIxF,EAAAC,EAAAC,cAACG,EAAA,EAAMoF,MAAP,CAAaC,eAAe,MAA5B,iBAEJ1F,EAAAC,EAAAC,cAACG,EAAA,EAAMsF,KAAP,KACI3F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,sBACXJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMyE,EAAK9B,mBAAmBrD,UAAU,yBACrDJ,EAAAC,EAAAC,cAAA,mBAIZF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAC0F,EAAD,CAAWvD,MAAO3B,KAAKC,MAAM0B,YAM7CrC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KAAMpF,KAAKqD,MAAMC,UAAW+B,OAAQrF,KAAKkD,aAC5C5D,EAAAC,EAAAC,cAAC2F,EAAA,EAAMG,OAAP,KACIhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAMJ,MAAP,oBAGJzF,EAAAC,EAAAC,cAAC2F,EAAA,EAAMF,KAAP,KACI3F,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,UAAU,iBAEVlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,wCACAnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACIC,SAAU3F,KAAKmD,aACfyC,KAAK,OACLhB,MAAO5E,KAAKqD,MAAME,aAClBsC,YAAY,eAEhBvG,EAAAC,EAAAC,cAACkG,EAAA,EAAYI,SAAb,SAKZxG,EAAAC,EAAAC,cAAC2F,EAAA,EAAMY,OAAP,KACIzG,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKkD,aAAtB,SACA5D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKoD,iBAAkB4C,QAAQ,WAAhD,2BA5GL1F,IAAMC,WCrCvB0F,cAEF,SAAAA,EAAYhG,EAAOuC,GAAS,IAAAZ,EAAA,OAAAc,OAAAC,EAAA,EAAAD,CAAA1C,KAAAiG,IACxBrE,EAAAc,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAuD,GAAAnD,KAAA9C,KAAMC,EAAOuC,KAMjBW,aAAe,SAACsB,GACZ7C,EAAK8C,SAAS,CAAEnB,aAAckB,EAAEE,OAAOC,SARfhD,EAU5BsB,YAAc,WAEVtB,EAAK8C,SAAS,CAAEpB,WAAW,EAAOC,aAAc,MAZxB3B,EAgB5BsE,cAAgB,WAQZtE,EAAKsB,cACLtB,EAAK3B,MAAMkG,SAASvE,EAAKyB,MAAME,eAvB/B3B,EAAKyB,MAAQ,CACTC,WAAa,EACbC,aAAgB,IAJI3B,yFA8BFwE,GAClBA,EAAU9C,YAActD,KAAKqD,MAAMC,WACnCtD,KAAK0E,SAAS,CAAEpB,UAAW8C,EAAU9C,6CAMzC,OACIhE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,KAAMpF,KAAKqD,MAAMC,UAAW+B,OAAQrF,KAAKkD,aAC5C5D,EAAAC,EAAAC,cAAC2F,EAAA,EAAMG,OAAP,KACIhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAMJ,MAAP,oBAGJzF,EAAAC,EAAAC,cAAC2F,EAAA,EAAMF,KAAP,KACI3F,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,UAAU,iBAEVlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,wCACAnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACIC,SAAU3F,KAAKmD,aACfyC,KAAK,OACLhB,MAAO5E,KAAKqD,MAAME,aAClBsC,YAAY,eAEhBvG,EAAAC,EAAAC,cAACkG,EAAA,EAAYI,SAAb,SAKZxG,EAAAC,EAAAC,cAAC2F,EAAA,EAAMY,OAAP,KACIzG,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKkD,aAAtB,SACA5D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKkG,cAAeF,QAAQ,WAA7C,0BAlEa1F,IAAMC,WA0I5B8F,cA9DX,SAAAA,EAAYpG,EAAOuC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1C,KAAAqG,IACxB5D,EAAAC,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAA9C,KAAMC,EAAOuC,KAOjB8D,gBAAkB,WACd7D,EAAKiC,SAAS,CAAEpB,WAAW,KATHb,EAY5ByD,cAAgB,SAACK,GAGb,IAAI/C,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,IACLuB,EAAO,CACPN,OAAQ,OACRC,IAAK,8CACLC,QACA,CACIC,cAAe,UAAYrD,EAAMY,UAAU0C,MAC3CC,eAAgB,oBAEpBC,KAAM,CAAEwC,QAASD,GACjBtC,MAAM,GAGVC,IAAMF,GACLG,KAAK,SAASC,GACXlD,QAAQC,IAAIiD,GACZZ,EAAKkB,SAAS,CAAEpB,WAAW,IAC3BE,EAAKvD,MAAMoE,YAEdC,MAAM,SAASC,GACZC,MAAMD,MAjCV9B,EAAKY,MAAQ,CACTC,WAAa,GAHOb,wEAsCnB,IAAAoC,EAAA7E,KACL,OAEIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,oCAA4BV,EAAcE,OAAOgB,KAAKC,MAAMwG,gBAGpEnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMyE,EAAKyB,oBAAmBhH,EAAAC,EAAAC,cAAA,uBAI3DF,EAAAC,EAAAC,cAACkH,EAAD,CAAwBpD,UAAWtD,KAAKqD,MAAMC,UAC1C6C,SAAU,SAAClH,GAAa4F,EAAKqB,cAAcjH,cAzDrCqB,IAAMC,sCC9EXoG,cAEnB,SAAAA,EAAY1G,GAAO,IAAA2B,EAAA,OAAAc,OAAAC,EAAA,EAAAD,CAAA1C,KAAA2G,IACjB/E,EAAAc,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAiE,GAAA7D,KAAA9C,KAAMC,KACD2G,SAAWhF,EAAKgF,SAAS5D,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAd,KAChBA,EAAKiF,UAAYjF,EAAKiF,UAAU7D,KAAfN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAd,KAHAA,wEAOV6C,wCAMKvD,QAAQC,IAAI,8CAMxB,OAEE7B,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAQC,SAAO,EAACC,kBAAgB,EAACC,WAAS,GACxC3H,EAAAC,EAAAC,cAACsH,EAAA,EAAOxB,OAAR,KACEhG,EAAAC,EAAAC,cAACsH,EAAA,EAAOI,MAAR,KACE5H,EAAAC,EAAAC,cAAA,KAAG2H,KAAK,KAAR,eAEF7H,EAAAC,EAAAC,cAACsH,EAAA,EAAOM,OAAR,OAEF9H,EAAAC,EAAAC,cAACsH,EAAA,EAAOO,SAAR,KACE/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAKC,WAAS,GACZjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAASC,SAAU,EAAGrH,QAASJ,KAAKC,MAAMyH,QAA1C,iEAhCuBpH,IAAMC,WCiG1BoH,cAtFX,SAAAA,EAAY1H,GAAO,IAAA2B,EAAA,OAAAc,OAAAC,EAAA,EAAAD,CAAA1C,KAAA2H,IACf/F,EAAAc,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAiF,GAAA7E,KAAA9C,KAAMC,KA0CVI,iBAAmB,WACfuB,EAAK3B,MAAM2H,QAAQ5F,KAAK,UA5CTJ,EA+CnB8F,OAAS,WACLlH,EAAMa,aACNO,EAAK3B,MAAM2H,QAAQ5F,KAAK,WA/CxBJ,EAAKyB,MAAQ,CACTnD,iBAAkB,KAClByB,MAAO,GACP8E,YAAa,MACboB,WAAW,GAIfjG,EAAKkG,kBAAoBlG,EAAKkG,kBAAkB9E,KAAvBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAd,KAVVA,mFAcf,IAAI4B,EAAOxD,KACPyD,EAAU,CACVC,OAAQ,MACRC,IAAK,8CACLC,QAAS,CAAEC,cAAe,UAAYrD,EAAMY,UAAU0C,QAG1DI,IAAMT,GACDU,KAAK,SAAUC,GACZlD,QAAQC,IAAIiD,EAASJ,KAAK+D,QAAQC,YAClC5D,EAASJ,KAAK+D,QAAQC,WAAWC,QAAQ,SAAAC,GAChCA,EAAKjJ,SACNiJ,EAAKjJ,OAAS,KAGtB,IAAIkJ,EAAWzF,OAAO0F,OAAO,GAAI5E,EAAKH,OACtC8E,EAASxG,MAAQyC,EAASJ,KAAK+D,QAAQC,WACvCG,EAASjI,iBAAmBkE,EAASJ,KAAK+D,QAAQ7H,iBAClDiI,EAAS1B,YAAcrC,EAASJ,KAAK+D,QAAQtB,YAC7C0B,EAASN,WAAY,EACrBrE,EAAKkB,SAASyD,KAEjB7D,MAAM,SAAUC,GACbC,MAAMD,iDAIdvE,KAAK8H,qDAYL,OAAI9H,KAAKqD,MAAMwE,UAGPvI,EAAAC,EAAAC,cAAA,KAAG6I,MAAO,CAENC,WAAc,QACdC,UAAa,WAHjB,cAQJjJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAMC,OAAO,GACTnJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACkJ,EAAD,CAAOhB,OAAQ1H,KAAK0H,WAG5BpI,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,KAEIlJ,EAAAC,EAAAC,cAACmJ,EAAD,CAAgBzI,iBAAkBF,KAAKqD,MAAMnD,iBACzCG,iBAAkBL,KAAKK,mBAG3Bf,EAAAC,EAAAC,cAACoJ,EAAD,CAAUjH,MAAO3B,KAAKqD,MAAM1B,MAAO0C,QAASrE,KAAK8H,oBAEjDxI,EAAAC,EAAAC,cAACqJ,EAAD,CAAapC,YAAazG,KAAKqD,MAAMoD,YAAapC,QAASrE,KAAK8H,6BAhF7DvH,+BCAjBuI,cAEF,SAAAA,EAAY7I,EAAOuC,GAAS,IAAAZ,EAAA,OAAAc,OAAAC,EAAA,EAAAD,CAAA1C,KAAA8I,IACxBlH,EAAAc,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAAoG,GAAAhG,KAAA9C,KAAMC,EAAOuC,KAOjBuG,eAAiB,SAACC,GAGd,GAAIpH,EAAKyB,MAAM4F,gBAAkBD,EAAO,CACpC,IAAIb,EAAWzF,OAAO0F,OAAO,GAAIxG,EAAKyB,OACtC8E,EAASc,cAAgBrH,EAAK3B,MAAM0B,MAAMqH,GAAO5G,KACjDR,EAAK8C,SAASyD,GACdvG,EAAK3B,MAAM8I,eAAeC,KAfNpH,EAsB5BsH,eAAiB,WAIb,IAHA,IAAIxH,EAAO,GACPC,EAAQC,EAAK3B,MAAM0B,MAEdE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAK9BH,EAAKM,KAAK1C,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAUlH,IAAKJ,EAAI,IAAIK,KAAQ0E,SAAUhF,EAAKmH,eAAgBtB,SAAU5F,GAAKF,EAAME,GAAGO,OAEpG,OAAOV,GA9BPE,EAAKyB,MAAQ,CACT4F,cAAiB,qBAJGrH,wEAqCxB,OACItC,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACIpD,QAAQ,UACRqD,MAAOrJ,KAAKqD,MAAM4F,cAClBhH,IAAI,6BACJqH,GAAE,kBAEDtJ,KAAKkJ,yBA9CU5I,IAAMC,WAgPvBgJ,cAnJX,SAAAA,EAAYtJ,EAAOuC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA1C,KAAAuJ,IACxB9G,EAAAC,OAAAE,EAAA,EAAAF,CAAA1C,KAAA0C,OAAAG,EAAA,EAAAH,CAAA6G,GAAAzG,KAAA9C,KAAMC,EAAOuC,KAxCjBgH,YAAc,EAuCc/G,EAtC5BgH,oBAAqB,EAsCOhH,EArC5BsG,eAAiB,SAACW,GACdjH,EAAK+G,YAAcE,EAEnB,IAAIvB,EAAWzF,OAAO0F,OAAO,GAAI3F,EAAKY,OAKtC,GAJA8E,EAASwB,cAAe,GAInBC,MAAMC,OAAOpH,EAAKY,MAAMyG,sBAAuB,CAEhD,IAAIC,EAAc,CACdpF,OAAQ,CACJC,MAAOuD,EAAS2B,sBAGxBrH,EAAKgH,oBAAqB,EAC1BhH,EAAKuH,2BAA2BD,GAIpCtH,EAAKiC,SAASyD,IAiBU1F,EAd5BuH,2BAA6B,SAACvF,GAC1B,IAAI0D,EAAWzF,OAAO0F,OAAO,GAAI3F,EAAKY,OACtC8E,EAAS2B,oBAAsBrF,EAAEE,OAAOC,OACnCnC,EAAKY,MAAMsG,eAAgBlH,EAAKgH,oBAAwBG,MAAMC,OAAOpH,EAAKY,MAAMyG,wBACjF5I,QAAQC,IAAI,iBAEZgH,EAASxG,MAAMc,EAAK+G,aAAaS,UAAY9B,EAASxG,MAAMc,EAAK+G,aAAavK,OAAS4K,OAAO1B,EAAS2B,qBACvG3B,EAAS+B,oBAAsB/B,EAASgC,wBAA0BN,OAAO1B,EAAS2B,qBAElF5I,QAAQC,IAAIgH,EAASxG,MAAMc,EAAK+G,aAAaS,YAEjDxH,EAAKiC,SAASyD,IAGU1F,EA8C5B2H,aAAe,WACX3H,EAAKxC,MAAM2H,QAAQ5F,KAAK,MA/CAS,EAkD5B4H,gBAAgB,WACZ,IAAI7G,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,IACLgB,EAAU,CACVC,OAAQ,QACRC,IAAK,yDACLC,QACA,CACIC,cAAe,UAAUrD,EAAMY,UAAU0C,MACzCC,eAAgB,oBAEpBC,KAAM,CAAE/E,OAAQwD,EAAKY,MAAM1B,MAAMc,EAAK+G,aAAaS,UAC/CX,GAAI7G,EAAKY,MAAM1B,MAAMc,EAAK+G,aAAac,KAC3CrG,MAAM,GAEVC,IAAMT,GACLU,KAAK,SAASC,GAEXlD,QAAQC,IAAIiD,EAASJ,MACrBR,EAAK4G,iBAER9F,MAAM,SAASC,GACZC,MAAMD,MApEV9B,EAAKY,MAAQ,CACT8G,wBAAyB,MACzBL,oBAAqB,GACrBH,cAAc,EACd9B,WAAU,EACVlG,MAAO,CAAC,CACJS,KAAM,GACNnD,OAAS,KAVOwD,mFAgBxB,IAAIe,EAAKxD,KACLyD,EAAU,CACVC,OAAQ,MACRC,IAAK,8CACLC,QAAS,CAAEC,cAAe,UAAWrD,EAAMY,UAAU0C,QAGzDI,IAAMT,GACLU,KAAK,SAASC,GACXlD,QAAQC,IAAIiD,EAASJ,KAAK+D,QAAQC,YAClC5D,EAASJ,KAAK+D,QAAQC,WAAWC,QAAQ,SAAAC,GACjCA,EAAKjJ,SACLiJ,EAAKjJ,OAAO,KAGpB,IAAIkJ,EAASzF,OAAO0F,OAAO,GAAG5E,EAAKH,OACnC8E,EAASxG,MAAMyC,EAASJ,KAAK+D,QAAQC,WACrCG,EAASgC,wBAAwB/F,EAASJ,KAAK+D,QAAQ7H,iBACvDiI,EAASoC,eAAiBnG,EAASJ,KAAK+D,QAAQ7H,iBAChDiI,EAASN,WAAU,EACnBrE,EAAKkB,SAASyD,KAEjB7D,MAAM,SAASC,GACZC,MAAMD,iDAIVvE,KAAK8H,qDAiCL,OAAG9H,KAAKqD,MAAMwE,UAGNvI,EAAAC,EAAAC,cAAA,KAAG6I,MAAO,CAEVC,WAAc,QACdC,UAAY,WAHZ,cAQJjJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4I,MAAO,CAAEE,UAAa,SACvBjJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GACLP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKoK,cAAe,OAG7C9K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,yCAAiCV,EAAcE,OAAQgB,KAAKqD,MAAMkH,eAAiBvK,KAAKqD,MAAMkH,eAAiBvK,KAAKqD,MAAM8G,4BAGlI7K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACgL,EAAD,CAAmB7I,MAAO3B,KAAKqD,MAAM1B,MAAOoH,eAAgB/I,KAAK+I,mBAGzEzJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAKH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YACXF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIC,UAAU,iBAEVlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,iCACAnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACIC,SAAU3F,KAAKgK,2BACfpE,KAAK,OACLC,YAAY,iBAEhBvG,EAAAC,EAAAC,cAACkG,EAAA,EAAYI,SAAb,UAKhBxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnBT,EAAAC,EAAAC,cAAA,MAAIiL,OAAQzK,KAAKqD,MAAMsG,cAAvB,oBACArK,EAAAC,EAAAC,cAAA,MAAIiL,QAASzK,KAAKqD,MAAMsG,cAAxB,IAAwC3J,KAAKqD,MAAM1B,MAAM3B,KAAKwJ,aAAapH,KAA3E,aACKtD,EAAcE,OAAOgB,KAAKqD,MAAM1B,MAAM3B,KAAKwJ,aAAaS,UAAYjK,KAAKqD,MAAM1B,MAAM3B,KAAKwJ,aAAaS,UAAYjK,KAAKqD,MAAM1B,MAAM3B,KAAKwJ,aAAavK,UAG/JK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAEnBT,EAAAC,EAAAC,cAAA,qCACKV,EAAcE,YAAuC0L,GAAhC1K,KAAKqD,MAAM6G,oBAAiClK,KAAKqD,MAAM6G,oBAAsBlK,KAAKqD,MAAM8G,4BAI1H7K,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,IACLP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAKqK,gBAAiBrE,QAAQ,WAA/C,+BAnLH1F,IAAMC,WCiBhBoK,6MAtEXC,aAAe,WACX,IAAIpH,EAAKd,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAd,IAETsC,IAAM,CACFR,OAAQ,OACRC,IAAK,iDACLK,KAAM,CAGF6G,MAAOjJ,EAAKiJ,MACZC,SAAUlJ,EAAKkJ,YAGlB3G,KAAK,SAAUC,GAEZ5D,EAAMO,SAAS,CACX8J,MAAO,qBACP/G,MAAQM,EAASJ,KAAKF,QAE1BN,EAAKvD,MAAM2H,QAAQ5F,KAAK,OAE3BsC,MAAM,SAAUC,GACbrD,QAAQC,IAAIoD,GACZC,MAAM/D,KAAKQ,UAAUsD,EAAMH,SAASJ,KAAK+G,WAMrDC,kBAAoB,SAACvG,GACjB7C,EAAKiJ,MAAMpG,EAAEE,OAAOC,SAExBqG,qBAAsB,SAACxG,GACnB7C,EAAKkJ,SAASrG,EAAEE,OAAOC,+EAGvB,OAEItF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,gBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,KAEIjG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACIC,SAAU3F,KAAKgL,kBACfpF,KAAK,QACLC,YAAY,gBAEhBvG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACIC,SAAU3F,KAAKiL,qBACfrF,KAAK,WACLC,YAAY,mBAEhBvG,EAAAC,EAAAC,cAACkG,EAAA,EAAYI,SAAb,SAIZxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASJ,KAAK4K,aAAc5E,QAAQ,WAAU1G,EAAAC,EAAAC,cAAA,8BA/D9Dc,IAAMC,WCFpB2K,mLAEE,OACI5L,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAQC,SAAUC,IAElB/L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8L,EAAD,CAAcC,OAAK,EAACC,KAAK,IAAIC,UAAW9D,IACpCrI,EAAAC,EAAAC,cAAC8L,EAAD,CAAcE,KAAK,QAAQC,UAAWC,IACtCpM,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOH,KAAK,SAASC,UAAWG,aARzBtL,IAAMC,WAkBvBsL,EAAe,SAAAC,GAAA,IAAcvL,EAAduL,EAAGL,UAAyBM,EAA5BrJ,OAAAsJ,EAAA,EAAAtJ,CAAAoJ,EAAA,sBAEjBxM,EAAAC,EAAAC,cAACmM,EAAA,EAADjJ,OAAA0F,OAAA,GACM2D,EADN,CAEEE,OAAQ,SAAAhM,GAAK,OACXO,EAAMM,gBACJxB,EAAAC,EAAAC,cAACe,EAAcN,GAEfX,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,SACV/I,MAAO,CAAEgJ,KAAMpM,EAAMqM,kBAOpBpB,ICjCKqB,QACW,cAA7BC,OAAOF,SAASG,UAEe,UAA7BD,OAAOF,SAASG,UAEhBD,OAAOF,SAASG,SAASC,MACvB,2DCRNC,IAASV,OAAO3M,EAAAC,EAAAC,cAACoN,EAAD,MAAcC,SAASC,eAAe,SDiHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9I,KAAK,SAAA+I,GACjCA,EAAaC","file":"static/js/main.ebc7c155.chunk.js","sourcesContent":["function MoneyFormater() {}\n\nMoneyFormater.prototype.format=function(amount) {\n    let money=(amount).toFixed(2).replace(/(\\d)(?=(\\d{2})+\\d\\.)/g, '$1,');\n\n    return 'Rs '+money;\n}\n\nexport default new MoneyFormater();","import React from 'react';\nimport { Row, Col,Button,Panel } from 'react-bootstrap';\nimport './currentAccount.css';\nimport { withRouter } from 'react-router'\nimport MoneyFormater from './../moneyFormater';\n\nclass CurrentAccount extends React.Component {\n\n    \n    render() {\n      return (\n\n        <Row className=\"element-root\">\n            <Panel>\n            <Row>\n                <Col xs={12} md={12} sm={12}>\n                <h5>Remaining Balance : {MoneyFormater.format(this.props.remainingBalance)}</h5>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12} md={12} sm={12}>\n                <Button onClick={this.props.goToTransferPage}><b>Transfer</b></Button>\n                </Col>\n            </Row>\n            </Panel>\n        </Row>\n      );\n    }\n  }\n  \n  export default CurrentAccount;","function Store(){\n    // Load user from localstorage and set value of isAuthenticated\n\n    if(JSON.parse(localStorage.getItem(\"piggy-app-user\"))) {\n        \n        this.user=JSON.parse(localStorage.getItem(\"piggy-app-user\"));\n        this.isAuthenticated=true;\n        // debugger;\n    }\n\n}\n\nStore.prototype.saveUser=function(user) {\n    this.user=user;\n    localStorage.setItem(\"piggy-app-user\", JSON.stringify(this.user));\n    console.log(this)\n    this.isAuthenticated=true;\n}\n\nStore.prototype.getUser=function(){\n    return this.user;\n}\n\nStore.prototype.deleteUser=function() {\n    localStorage.removeItem(\"piggy-app-user\");\n}\n\nexport default new Store();","import React from 'react';\nimport {\n    Modal, Button, Row,\n    Col, ListGroup, Panel,\n    FormGroup, FormControl, ControlLabel,\n    ListGroupItem\n} from 'react-bootstrap';\nimport './accounts.css';\nimport axios from 'axios';\nimport Store from './../user/userStore';\nimport MoneyFormater from './../moneyFormater';\n\nclass ListItems extends React.Component {\n\n    // @Todo : Proper unique key for every added element\n    createList = () => {\n        let list = []\n        let funds = this.props.funds;\n\n        // debugger;\n        // Outer loop to create parent\n        for (let i = 0; i < funds.length; i++) {\n            let fundComplete = [];\n            fundComplete.push(<Col key={new Date() + \"name\" + i} className=\"fund-name\" xs={6} md={6} lg={6}>\n                {funds[i].name} : </Col>);\n            fundComplete.push(<Col key={new Date() + \"amt\" + i} className=\"fund-amount\" xs={6} md={6} lg={6}>\n                {MoneyFormater.format(funds[i].amount)} </Col>);\n            //Create the parent and add the children\n            list.push(<ListGroupItem key={new Date() + \"items\" + i}><Row>{fundComplete}</Row></ListGroupItem>)\n        }\n        return list\n    }\n    render() {\n\n        return (\n\n            <ListGroup>\n\n                {this.createList()}\n            </ListGroup>\n        );\n    }\n};\n\nclass Accounts extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.addNewPiggyBank = this.addNewPiggyBank.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.saveNewPiggyBank = this.saveNewPiggyBank.bind(this);\n\n        this.state = {\n            showModal: false,\n            newBankvalue: ''\n        };\n    }\n\n    saveNewPiggyBank() {\n        let self=this;\n        var options = { \n            method: 'POST',\n            url: 'https://bank-piggy.herokuapp.com/v1/account/piggy-bank',\n            headers:\n            {\n                authorization: 'Bearer '+ Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { name: this.state.newBankvalue },\n            json: true\n        };\n        axios(options)\n        .then(function(response){\n\n            self.props.refresh();\n            // debugger;\n        //     let newState = Object.assign({}, self.state);\n        // newState.funds.push({ name: self.state.newBankvalue, amount: 0 });\n        // newState.newBankvalue = '';\n        // this.setState(newState);\n        self.handleClose();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n        \n    }\n\n    handleChange(e) {\n        this.setState({ newBankvalue: e.target.value });\n    }\n    handleClose() {\n\n        this.setState({ showModal: false, newBankvalue: '' });\n    }\n\n\n    addNewPiggyBank() {\n        this.setState({ showModal: true });\n    }\n\n    render() {\n        return (\n\n            <Row className=\"piggy-bank-root\">\n                <Panel>\n                    <Panel.Heading>\n                        <Panel.Title componentClass=\"h3\">Piggy Banks </Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body>\n                        <Row className=\"add-piggy-bank-row\">\n                            <Col xs={12} md={12} sm={12}>\n                                <Button onClick={() => this.addNewPiggyBank()} className=\"add-piggy-bank-button\" >\n                                    <b>Add</b>\n                                </Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} md={12} sm={12}>\n                                <ListItems funds={this.props.funds} />\n                            </Col>\n                        </Row>\n\n                    </Panel.Body>\n                </Panel>\n                <div className=\"static-modal\">\n                    <Modal show={this.state.showModal} onHide={this.handleClose}>\n                        <Modal.Header>\n                            <Modal.Title>Enter Name</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <form>\n                                <FormGroup\n                                    controlId=\"formBasicText\"\n                                >\n                                    <ControlLabel>Working example with validation</ControlLabel>\n                                    <FormControl\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.newBankvalue}\n                                        placeholder=\"Enter text\"\n                                    />\n                                    <FormControl.Feedback />\n                                </FormGroup>\n                            </form>\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            <Button onClick={this.handleClose}>Close</Button>\n                            <Button onClick={this.saveNewPiggyBank} bsStyle=\"primary\">Save changes</Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            </Row>\n\n        );\n    }\n}\n\n\nexport default Accounts;","import React from 'react';\nimport { Row, Col, Button, Panel, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\nimport './currentAccount.css';\nimport Store from './../user/userStore';\nimport axios from 'axios';\nimport MoneyFormater from './../moneyFormater';\n\nclass UpdateMainAccountModal extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            \"showModal\": false,\n            \"newBankvalue\": ''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({ newBankvalue: e.target.value });\n    }\n    handleClose = () => {\n\n        this.setState({ showModal: false, newBankvalue: '' });\n\n    }\n\n    updateMainBal = () => {\n        // let newState = Object.assign({}, this.state);\n        // newState.funds.push({ name: this.state.newBankvalue, amount: 0 });\n        // newState.newBankvalue = '';\n        // this.setState(newState);\n        // debugger;\n    \n\n        this.handleClose();\n        this.props.onUpdate(this.state.newBankvalue);\n        // debugger;\n       \n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.showModal !== this.state.showModal) {\n            this.setState({ showModal: nextProps.showModal });\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"static-modal\">\n                <Modal show={this.state.showModal} onHide={this.handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Enter Name</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <form>\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                            >\n                                <ControlLabel>Working example with validation</ControlLabel>\n                                <FormControl\n                                    onChange={this.handleChange}\n                                    type=\"text\"\n                                    value={this.state.newBankvalue}\n                                    placeholder=\"Enter text\"\n                                />\n                                <FormControl.Feedback />\n                            </FormGroup>\n                        </form>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button onClick={this.handleClose}>Close</Button>\n                        <Button onClick={this.updateMainBal} bsStyle=\"primary\">Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n        );\n    }\n}\nclass MainAccount extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            \"showModal\": false\n        };\n\n\n    }\n    openUpdateModal = () => {\n        this.setState({ showModal: true });\n    }\n\n    updateMainBal = (mainBalanceAmount) => {\n        // debugger;\n        // this.setState({\"mainBalanceAmount\":mainBalanceAmount});\n        var self=this;\n        let data = {\n            method: 'POST',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers:\n            {\n                authorization: 'Bearer ' + Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { balance: mainBalanceAmount },\n            json: true\n        };\n\n        axios(data)\n        .then(function(response){\n            console.log(response);\n            self.setState({ showModal: false });\n            self.props.refresh();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n    }\n    render() {\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <h5>Main Account Balance : {MoneyFormater.format(this.props.mainBalance)}</h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <Button onClick={() => this.openUpdateModal()}><b>Update</b></Button>\n                        </Col>\n                    </Row>\n                </Panel>\n                <UpdateMainAccountModal showModal={this.state.showModal}\n                    onUpdate={(amount) => { this.updateMainBal(amount) }} />\n            </Row>\n        );\n    }\n}\n\n//   export default RequiredAuth(MainAccount);\nexport default MainAccount;","import React from 'react';\nimport { Navbar, Nav, NavItem, NavDropdown, DropdownButton, MenuItem, CollapsibleNav } from 'react-bootstrap';\n\nexport default class MyNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.onSelect = this.onSelect.bind(this);\n    this.toggleNav = this.toggleNav.bind(this);\n    // this.state = {navExpanded: false};\n  }\n\n  onSelect(e) {\n    // console.log('OnSelect')\n    // console.log(this.state.navExpanded);\n    // this.setState({navExpanded: false});\n  }\n\n  toggleNav() { console.log('toggle...') };\n\n  // <Navbar inverse fixedTop toggleNavKey={0} navExpanded={this.state.navExpanded} onToggle={() => this.toggleNav()}>\n  // <Navbar inverse fixedTop toggleNavKey={0} navExpanded={this.state.navExpanded} >\n\n  render() {\n    return (\n\n      <Navbar inverse collapseOnSelect staticTop>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"/\">Piggy-Bank</a>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n            <NavItem eventKey={1} onClick={this.props.logout}>\n              Logout\n      </NavItem>\n    \n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    )\n\n  }\n\n  componentDidMount() {\n\n  }\n}","import React, { Component } from 'react';\nimport { Grid } from 'react-bootstrap';\nimport './App.css';\n\nimport { Row, Col, Button, Panel } from 'react-bootstrap';\nimport CurrentAccount from './CurrentAccount';\nimport Accounts from './accounts';\nimport MainAccount from './mainAccount';\nimport Store from './../user/userStore';\nimport axios from \"axios\";\nimport MyNav from './../nav';\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            remainingBalance: 4400,\n            funds: [],\n            mainBalance: 90500,\n            isLoading: true\n\n        }\n\n        this.getDataFromServer = this.getDataFromServer.bind(this);\n    }\n\n    getDataFromServer() {\n        var self = this;\n        var options = {\n            method: 'GET',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers: { authorization: 'Bearer ' + Store.getUser().token }\n        };\n\n        axios(options)\n            .then(function (response) {\n                console.log(response.data.account.piggybanks)\n                response.data.account.piggybanks.forEach(bank => {\n                    if (!bank.amount)\n                        bank.amount = 0;\n                });\n\n                let newState = Object.assign({}, self.state);\n                newState.funds = response.data.account.piggybanks;\n                newState.remainingBalance = response.data.account.remainingBalance;\n                newState.mainBalance = response.data.account.mainBalance;\n                newState.isLoading = false;\n                self.setState(newState);\n            })\n            .catch(function (error) {\n                alert(error);\n            })\n    }\n    componentDidMount() {\n        this.getDataFromServer();\n    }\n    goToTransferPage = () => {\n        this.props.history.push(\"/save\");\n    }\n\n    logout = ()=>{\n        Store.deleteUser();\n        this.props.history.push(\"/login\");\n    }\n    render() {\n\n        if (this.state.isLoading)\n            return (\n\n                <p style={{\n\n                    'paddingTop': \"250px\",\n                    'textAlign': \"center\"\n                }}>Loading...</p>\n            );\n        return (\n\n            <div>\n                <Grid fluid={true}>\n                    <Row>\n                        <MyNav logout={this.logout}/>\n                    </Row>\n                </Grid>\n                <Grid>\n\n                    <CurrentAccount remainingBalance={this.state.remainingBalance}\n                        goToTransferPage={this.goToTransferPage}\n                    />\n\n                    <Accounts funds={this.state.funds} refresh={this.getDataFromServer} />\n\n                    <MainAccount mainBalance={this.state.mainBalance} refresh={this.getDataFromServer} />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {\n    Row, Col, Button,\n    MenuItem, DropdownButton,\n    Panel, FormGroup, FormControl, ControlLabel\n} from 'react-bootstrap';\nimport './../home/currentAccount.css';\nimport MoneyFormater from './../moneyFormater';\n\nimport axios from 'axios';\nimport Store from './../user/userStore';\n\nclass DropDownWithItems extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            \"dropDownTitle\": \"Select Piggy Bank\"\n        }\n    }\n\n    onFundSelected = (index) => {\n        // console.log(event);\n\n        if (this.state.dropDownTitle !== index) {\n            let newState = Object.assign({}, this.state);\n            newState.dropDownTitle = this.props.funds[index].name;\n            this.setState(newState);\n            this.props.onFundSelected(index);\n        }\n\n    }\n\n\n    // @Todo : Proper unique key for every added element\n    createDropDown = () => {\n        let list = []\n        let funds = this.props.funds;\n        // Outer loop to create parent\n        for (let i = 0; i < funds.length; i++) {\n            // let fundComplete = [];\n            // fundComplete.push(<Col key={new Date()+\"name\"+i} className=\"fund-name\" xs={6} md={6} lg={6}>\n            //     {funds[i].name} : </Col>);\n            //Create the parent and add the children\n            list.push(<MenuItem key={i + new Date()} onSelect={this.onFundSelected} eventKey={i} >{funds[i].name}</MenuItem>)\n        }\n        return list\n    }\n    render() {\n\n        return (\n            <DropdownButton\n                bsStyle=\"default\"\n                title={this.state.dropDownTitle}\n                key=\"dropDownButtonInSaveToBank\"\n                id={`dropdown-basic`}>\n\n                {this.createDropDown()}\n            </DropdownButton>\n        )\n    }\n};\n\nclass SaveToBank extends React.Component {\n\n    currentFund = 0;\n    forceUpdateAmounts = false;\n    onFundSelected = (fundIndex) => {\n        this.currentFund = fundIndex;\n\n        let newState = Object.assign({}, this.state);\n        newState.fundSelected = true;\n\n\n        // debugger;\n        if (!isNaN(Number(this.state.transferAmountValue))) {\n\n            let forceObject = {\n                target: {\n                    value: newState.transferAmountValue\n                }\n            }\n            this.forceUpdateAmounts = true;\n            this.handleTransferAmountChange(forceObject);\n        }\n\n\n        this.setState(newState);\n    }\n\n    handleTransferAmountChange = (e) => {\n        let newState = Object.assign({}, this.state);\n        newState.transferAmountValue = e.target.value;\n        if ((this.state.fundSelected || this.forceUpdateAmounts) && !isNaN(Number(this.state.transferAmountValue))) {\n            console.log(\"value changed\");\n\n            newState.funds[this.currentFund].newAmount = newState.funds[this.currentFund].amount + Number(newState.transferAmountValue);\n            newState.newRemainingBalance = newState.remainingAccountBalance - Number(newState.transferAmountValue);\n\n            console.log(newState.funds[this.currentFund].newAmount);\n        }\n        this.setState(newState);\n    }\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            remainingAccountBalance: 14400,\n            transferAmountValue: '',\n            fundSelected: false,\n            isLoading:true,\n            funds: [{\n                name :'',\n                amount : 0\n            }]\n        }\n    }\n\n    getDataFromServer() {\n        var self=this;\n        var options = {\n            method: 'GET',\n            url: 'https://bank-piggy.herokuapp.com/v1/account',\n            headers: { authorization: 'Bearer '+ Store.getUser().token}\n        };\n\n        axios(options)\n        .then(function(response){\n            console.log(response.data.account.piggybanks)\n            response.data.account.piggybanks.forEach(bank => {\n                if(!bank.amount)\n                    bank.amount=0;\n            });\n\n            let newState=Object.assign({},self.state);\n            newState.funds=response.data.account.piggybanks;\n            newState.remainingAccountBalance=response.data.account.remainingBalance;\n            newState.currentBalance = response.data.account.remainingBalance;\n            newState.isLoading=false;\n            self.setState(newState);\n        })\n        .catch(function(error){\n            alert(error);\n        })\n    }\n    componentDidMount() {\n        this.getDataFromServer();\n    }\n\n    goToHomePage = () => {\n        this.props.history.push(\"/\");\n    }\n\n    executeTransfer=()=> {\n        let self=this;\n        var options = {\n            method: 'PATCH',\n            url: 'https://bank-piggy.herokuapp.com/v1/account/piggy-bank',\n            headers:\n            {\n                authorization: 'Bearer '+Store.getUser().token,\n                'content-type': 'application/json'\n            },\n            data: { amount: this.state.funds[this.currentFund].newAmount, \n                id: this.state.funds[this.currentFund]._id },\n            json: true\n        };\n        axios(options)\n        .then(function(response){\n            // Redirect to home page\n            console.log(response.data);\n            self.goToHomePage();\n        })\n        .catch(function(error){\n            alert(error);\n        });\n    }\n    render() {\n\n        if(this.state.isLoading)\n            return (\n                \n                <p style={{\n                \n                'paddingTop' :\"250px\",\n                'textAlign':\"center\"\n                }}>Loading...</p>\n            );\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row style={{ \"textAlign\": \"left\" }}>\n                        <Col xs={3}>\n                            <Button onClick={this.goToHomePage}>{\"<\"}</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <h5>Current Remaining Balance : {MoneyFormater.format( this.state.currentBalance ? this.state.currentBalance : this.state.remainingAccountBalance)}</h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <DropDownWithItems funds={this.state.funds} onFundSelected={this.onFundSelected} />\n                        </Col>\n                    </Row>\n                    <Row><br /><br /></Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <form>\n                                <FormGroup\n                                    controlId=\"formBasicText\"\n                                >\n                                    <ControlLabel>Enter Amount to transfer</ControlLabel>\n                                    <FormControl\n                                        onChange={this.handleTransferAmountChange}\n                                        type=\"text\"\n                                        placeholder=\"Enter Amount\"\n                                    />\n                                    <FormControl.Feedback />\n                                </FormGroup>\n                            </form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6} md={6} sm={6}>\n                            <h5 hidden={this.state.fundSelected}>No fund selected</h5>\n                            <h5 hidden={!this.state.fundSelected}> {this.state.funds[this.currentFund].name} balance : \n                                {MoneyFormater.format(this.state.funds[this.currentFund].newAmount ? this.state.funds[this.currentFund].newAmount : this.state.funds[this.currentFund].amount)}</h5>\n                        </Col>\n\n                        <Col xs={6} md={6} sm={6}>\n\n                            <h5> New Remaining balance :\n                                {MoneyFormater.format(this.state.newRemainingBalance!=undefined ? this.state.newRemainingBalance : this.state.remainingAccountBalance)}</h5>\n                        </Col>\n\n                    </Row>\n                    <Row>\n                        <Col xs={12}>\n                            <Button onClick={this.executeTransfer} bsStyle=\"primary\">Confirm Transfer</Button>\n                        </Col>\n                    </Row>\n                </Panel>\n            </Row>\n        );\n    }\n}\n\nexport default SaveToBank;","import React from 'react';\nimport {\n    Row, Col, Button, Panel,\n    FormGroup, FormControl, ControlLabel\n} from 'react-bootstrap';\nimport './../home/currentAccount.css';\nimport Store from './userStore';\nimport axios from \"axios\";\n\nclass Login extends React.Component {\n\n    attemptLogin = () => {\n        var self=this;\n        // Send a POST request\n        axios({\n            method: 'post',\n            url: 'https://bank-piggy.herokuapp.com/v1/user/login',\n            data: {\n                // email: 'tauseef.naqvi786@gmail.com',\n                // password: 'india123'\n                email: this.email,\n                password: this.password\n            }\n        })\n            .then(function (response) {\n                // console.log(response)\n                Store.saveUser({\n                    email: \"jafar912@gmail.com\",\n                    token : response.data.token\n                });\n                self.props.history.push(\"/\");\n            })\n            .catch(function (error) {\n                console.log(error);\n                alert(JSON.stringify(error.response.data.msg));\n            })\n\n\n    }\n\n    handleEmailChange = (e)=> {\n        this.email=e.target.value;\n    }\n    handlePasswordChange =(e)=>{\n        this.password=e.target.value;\n    }\n    render() {\n        return (\n\n            <Row className=\"element-root\">\n                <Panel>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <FormGroup\n                            >\n                                <FormControl\n                                    onChange={this.handleEmailChange}\n                                    type=\"email\"\n                                    placeholder=\"Enter email\"\n                                />\n                                <br />\n                                <FormControl\n                                    onChange={this.handlePasswordChange}\n                                    type=\"password\"\n                                    placeholder=\"Enter password\"\n                                />\n                                <FormControl.Feedback />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} md={12} sm={12}>\n                            <Button onClick={this.attemptLogin} bsStyle=\"primary\"><b>Login</b></Button>\n                        </Col>\n                    </Row>\n                </Panel>\n            </Row>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport HomePage from './home/homePage';\nimport saveToBankPage from './savings/saveToBankPage';\nimport LoginPage from './user/loginPage';\nimport Store from './user/userStore';\nclass PiggyApp extends React.Component {\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n\n            <div>\n            <PrivateRoute exact path=\"/\" component={HomePage} />\n                <PrivateRoute path=\"/save\" component={saveToBankPage} />\n                <Route path=\"/login\" component={LoginPage} />\n            </div>\n                \n\n            </Router>\n\n        );\n    }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    \n    <Route\n      {...rest}\n      render={props =>\n        Store.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\nexport default PiggyApp;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Tinker from './tinker';\nimport PiggyApp from './piggy-app';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PiggyApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}